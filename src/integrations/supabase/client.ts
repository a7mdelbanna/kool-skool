
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://pmcvsnlgesgckqxxoiob.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBtY3ZzbmxnZXNnY2txeHhvaW9iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIwNjIyODIsImV4cCI6MjA1NzYzODI4Mn0._MvFbExQAc_23ANTSZ1yxX6TQdiHrPEY2QwcoLrXkkE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create a client with type safety
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Override rpc method to accept any function name
// This will allow calling any RPC function without TypeScript errors
const originalRpc = supabase.rpc;

// Use type assertion to make TypeScript happy
supabase.rpc = ((functionName: string, ...args: any[]) => {
  return originalRpc(functionName as any, ...(args as any[]));
}) as typeof supabase.rpc;
