
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://cfacqfrutwfbfibswckp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNmYWNxZnJ1dHdmYmZpYnN3Y2twIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIwOTQ2MzMsImV4cCI6MjA1NzY3MDYzM30.QuxaZKXmhvdCLDUlVRA7Pge0JLm2EHl4qRApoGuevcE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to upload base64 image to schools
export const uploadBase64Image = async (
  base64String: string, 
  schoolId: string, 
  field: 'logo' | 'phone' | 'telegram' | 'whatsapp' | 'instagram'
) => {
  const { data, error } = await supabase
    .from('schools')
    .update({ [field]: base64String })
    .eq('id', schoolId);
    
  return { data, error };
};

// Helper function to fetch user profile data
export const fetchUserProfile = async () => {
  const { data: { user } } = await supabase.auth.getUser();
  
  if (!user) {
    throw new Error('No user authenticated');
  }
  
  // Add debug logging to see what data is coming from Supabase
  console.log("Auth user data:", user);
  
  const { data, error } = await supabase
    .from('profiles')
    .select('*')
    .eq('id', user.id)
    .single();
    
  if (error) {
    console.error("Error fetching profile:", error);
    throw error;
  }
  
  console.log("Profile data from database:", data);
  
  return { user, profile: data };
};

// Helper function to update user profile
export const updateUserProfile = async (
  profileData: {
    first_name?: string;
    last_name?: string;
    phone?: string;
    profile_picture?: string | null;
  }
) => {
  const { data: { user } } = await supabase.auth.getUser();
  
  if (!user) {
    throw new Error('No user authenticated');
  }
  
  const { data, error } = await supabase
    .from('profiles')
    .update(profileData)
    .eq('id', user.id);
    
  if (error) {
    throw error;
  }
  
  return data;
};

// Helper function to create a team member with direct authentication
export const createTeamMember = async (
  userData: {
    email: string;
    password: string;
    role: "director" | "teacher" | "admin" | "staff";
    firstName?: string;
    lastName?: string;
  }
) => {
  const { data, error } = await supabase.rpc('create_team_member', {
    email_param: userData.email,
    password_param: userData.password,
    role_param: userData.role,
    first_name_param: userData.firstName || null,
    last_name_param: userData.lastName || null
  });
  
  if (error) {
    console.error("Error creating team member:", error);
    throw error;
  }
  
  return data;
};
