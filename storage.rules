rules_version = "2";
service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to read/write files in the students folder
    match /students/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && request.resource.size < 5 * 1024 * 1024  // Max 5MB
        && request.resource.contentType.matches("image/.*"); // Only images
      allow delete: if request.auth != null;
    }
    
    // Allow authenticated users to manage their own profile pictures
    match /profiles/{userId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId
        && request.resource.size < 5 * 1024 * 1024
        && request.resource.contentType.matches("image/.*");
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Speaking practice audio files
    match /speaking-audio/{conversationId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
        && request.resource.size < 50 * 1024 * 1024  // Max 50MB for audio
        && (request.resource.contentType.matches("audio/.*") || 
            request.resource.contentType.matches("video/.*"));
      allow delete: if request.auth != null;
    }
    
    // Speaking practice materials (PDFs, documents, etc.)
    match /speaking-materials/{topicId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
        && request.resource.size < 20 * 1024 * 1024  // Max 20MB for materials
        && (request.resource.contentType.matches("application/pdf") ||
            request.resource.contentType.matches("image/.*") ||
            request.resource.contentType.matches("video/.*") ||
            request.resource.contentType.matches("application/.*"));
      allow delete: if request.auth != null;
    }
    
    // Default: deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
