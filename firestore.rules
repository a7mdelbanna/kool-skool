rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Temporary: Allow authenticated users to access most resources
    // This avoids the recursive permission check issue
    // TODO: Implement proper role-based access control with Cloud Functions
    
    // Schools Collection
    match /schools/{schoolId} {
      allow read: if isAuthenticated();
      allow create: if true; // Allow public creation during initial setup
      allow update, delete: if isAuthenticated();
    }
    
    // Users Collection
    match /users/{userId} {
      allow read: if isAuthenticated(); // Any authenticated user can read user docs
      allow create: if true; // Allow public creation during initial setup
      allow update: if isOwner(userId) || isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Students Collection
    match /students/{studentId} {
      allow read, write: if isAuthenticated();
    }
    
    // Courses Collection
    match /courses/{courseId} {
      allow read, write: if isAuthenticated();
    }
    
    // Groups Collection
    match /groups/{groupId} {
      allow read, write: if isAuthenticated();
      
      // Group Students Subcollection
      match /students/{enrollmentId} {
        allow read, write: if isAuthenticated();
      }
    }
    
    // Subscriptions Collection
    match /subscriptions/{subscriptionId} {
      allow read, write: if isAuthenticated();
    }
    
    // Sessions Collection
    match /sessions/{sessionId} {
      allow read, write: if isAuthenticated();
      
      // Session Attendees Subcollection
      match /attendees/{studentId} {
        allow read, write: if isAuthenticated();
      }
    }
    
    // Transactions Collection
    match /transactions/{transactionId} {
      allow read, write: if isAuthenticated();
      
      // Transaction Tags Subcollection
      match /tags/{tagId} {
        allow read, write: if isAuthenticated();
      }
    }
    
    // Accounts Collection
    match /accounts/{accountId} {
      allow read, write: if isAuthenticated();
    }
    
    // Licenses Collection
    match /licenses/{licenseId} {
      allow read: if true; // Public read for license validation
      allow create: if true; // Public create for initial setup
      allow update: if true; // Public update during school setup  
      allow delete: if isAuthenticated();
    }
    
    // Transaction Categories Collection
    match /transactionCategories/{categoryId} {
      allow read, write: if isAuthenticated();
    }
    
    // Contacts Collection  
    match /contacts/{contactId} {
      allow read, write: if isAuthenticated();
    }
    
    // Contact Types Collection
    match /contactTypes/{typeId} {
      allow read, write: if isAuthenticated();
    }
    
    // Currencies Collection
    match /currencies/{currencyCode} {
      allow read, write: if isAuthenticated();
    }
    
    // Student Levels Collection
    match /studentLevels/{levelId} {
      allow read, write: if isAuthenticated();
    }
    
    // Tags Collection (for payment tags)
    match /tags/{tagId} {
      allow read, write: if isAuthenticated();
    }
    
    // Session Details Collection
    match /session_details/{detailsId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // TODOs Collection
    match /todos/{todoId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Catch-all rule for any other collections
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}